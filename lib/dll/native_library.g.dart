// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
import 'dart:ffi' as ffi;

class NativeLibrary {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  NativeLibrary(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  NativeLibrary.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  void init(
    ffi.Pointer<ffi.Int8> firstImagePath,
    double fps,
    ffi.Pointer<ffi.Int8> output,
  ) {
    return _init(
      firstImagePath,
      fps,
      output,
    );
  }

  late final _initPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Pointer<ffi.Int8>, ffi.Double,
              ffi.Pointer<ffi.Int8>)>>('init');
  late final _init = _initPtr.asFunction<
      void Function(ffi.Pointer<ffi.Int8>, double, ffi.Pointer<ffi.Int8>)>();

  void addImage(
    ffi.Pointer<ffi.Int8> image,
  ) {
    return _addImage(
      image,
    );
  }

  late final _addImagePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Int8>)>>(
          'addImage');
  late final _addImage =
      _addImagePtr.asFunction<void Function(ffi.Pointer<ffi.Int8>)>();

  void finish() {
    return _finish();
  }

  late final _finishPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function()>>('finish');
  late final _finish = _finishPtr.asFunction<void Function()>();
}
